//from src/fleet.js
// Generated by CoffeeScript 1.12.3
(function() {
  var insertFleet, isEmptyFleet, isEmptySpec, lockScreen, moveFleet, swapFleet, unitButton;

  eval(onecup["import"]());

  isEmptySpec = function(spec) {
    if (!spec) {
      return true;
    }
    try {
      spec = JSON.parse(spec);
    } catch (error) {
      return true;
    }
    if (spec.parts == null) {
      return true;
    }
    if (spec.parts.length === 0) {
      return true;
    }
    return false;
  };

  window.FleetMode = (function() {
    function FleetMode() {}

    FleetMode.prototype.focus = [0, 0];

    FleetMode.prototype.zoom = 1;

    FleetMode.prototype.onbuildclick = function(e, index) {
      return e.preventDefault();
    };

    FleetMode.prototype.tick = function() {
      var dragger, trash;
      trash = onecup.lookup("#trash");
      if (buildBar.draggingUnit) {
        dragger = onecup.lookup("#unit-dragger");
        if ((dragger != null) && (trash != null)) {
          dragger.style.left = control.mouse[0] - 84 / 2 + "px";
          dragger.style.top = control.mouse[1] - 84 / 2 + "px";
          if (control.mouse[0] < 100 || control.mouse[0] > window.innerWidth - 100) {
            dragger.style.backgroundColor = "rgba(255,0,0,.5)";
            trash.src = "img/ui/trashOpen@2x.png";
          } else {
            dragger.style.backgroundColor = "rgba(0,0,0,0)";
            trash.src = "img/ui/trash@2x.png";
          }
        }
      } else if (buildBar.draggingFleet) {
        dragger = onecup.lookup("#fleet-dragger");
        if (dragger != null) {
          if (control.mouse[1] < 64) {
            dragger.style.backgroundColor = "rgba(255,0,0,.5)";
            trash.src = "img/ui/trashOpen@2x.png";
          } else {
            dragger.style.backgroundColor = "rgba(0,0,0,0)";
            trash.src = "img/ui/trash@2x.png";
          }
        }
      } else {
        if (trash != null) {
          trash.src = "img/ui/trash@2x.png";
        }
      }
      return onecup.refresh();
    };

    FleetMode.prototype.draw = function() {
      var bg_zoom, z;
      bg_zoom = Math.max(window.innerWidth, window.innerHeight) / 128;
      z = bg_zoom * this.zoom;
      baseAtlas.beginSprites(this.focus, this.zoom);
      baseAtlas.drawSprite("img/newbg/fill.png", [-this.focus[0], -this.focus[1]], [z, z], 0, mapping.themes[0].fillColor);
      baseAtlas.drawSprite("img/newbg/gradient.png", [-this.focus[0], -this.focus[1]], [z, z], 0, mapping.themes[0].spotColor);
      return baseAtlas.finishSprites();
    };

    return FleetMode;

  })();

  swapFleet = function(row) {
    var i, j, key, specA, specB;
    console.log("swapFleet", row);
    for (i = j = 0; j < 10; i = ++j) {
      key = row + "," + i;
      specA = commander.fleet[key] || "";
      specB = commander.buildBar[i] || "";
      commander.fleet[key] = specB;
      commander.buildBar[i] = specA;
    }
    return control.savePlayer();
  };

  moveFleet = function(from, to) {
    var i, j, keyF, keyT, results;
    results = [];
    for (i = j = 0; j < 10; i = ++j) {
      keyF = from + "," + i;
      keyT = to + "," + i;
      commander.fleet[keyT] = commander.fleet[keyF];
      results.push(commander.fleet.ais[to] = commander.fleet.ais[from]);
    }
    return results;
  };

  isEmptyFleet = function(row) {
    var i, j;
    if (commander.fleet.ais[row]) {
      return false;
    }
    for (i = j = 0; j < 10; i = ++j) {
      if (!isEmptySpec(commander.fleet[row + "," + i])) {
        return false;
      }
    }
    return true;
  };

  insertFleet = function(from, to) {
    var dir, i, j, l, m, moving, n, ref, ref1;
    if (isEmptyFleet(to)) {
      moveFleet(from, to);
      delete commander.fleet.ais[from];
      for (i = j = 0; j < 10; i = ++j) {
        commander.fleet[from + "," + i] = "";
      }
    } else {
      dir = Math.sign(to - from);
      moving = {
        name: commander.fleet.ais[from],
        specs: []
      };
      for (i = l = 0; l < 10; i = ++l) {
        moving.specs[i] = commander.fleet[from + "," + i];
      }
      for (i = m = ref = from + dir, ref1 = to; ref <= ref1 ? m <= ref1 : m >= ref1; i = ref <= ref1 ? ++m : --m) {
        moveFleet(i, i - dir);
      }
      commander.fleet.ais[to] = moving.name;
      for (i = n = 0; n < 10; i = ++n) {
        commander.fleet[to + "," + i] = moving.specs[i];
      }
    }
    return control.savePlayer();
  };

  window.fleetUI = function() {
    if (!commander) {
      return;
    }
    div(function() {
      position("absolute");
      top(0);
      left(0);
      color("white");
      z_index("2");
      return ui.topButton("menu");
    });
    div(".hover-black", function() {
      position("absolute");
      bottom(0);
      left(0);
      z_index("2");
      return ui.barButton("design");
    });
    div(function() {
      position("absolute");
      bottom(0);
      right(0);
      z_index("2");
      return ui.barButton("fleet");
    });
    div(function() {
      position("absolute");
      top(0);
      right(0);
      z_index("2");
      img("#trash", {
        src: "img/ui/trash.png",
        width: 64,
        height: 64
      });
      return onmouseup(function() {
        var i, j;
        if (buildBar.draggingUnit) {
          playSound("sounds/ui/shake.wav");
          buildBar.draggingUnit = null;
          fleetMode.tick();
        }
        if (buildBar.draggingFleet) {
          for (i = j = 0; j < 10; i = ++j) {
            commander.fleet[row + "," + i] = "";
          }
          return delete commander.fleet.ais[row];
        }
      });
    });
    div(function() {
      text_align("center");
      overflow_y("scroll");
      position("absolute");
      z_index("0");
      left(0);
      right(0);
      top(0);
      bottom(0);
      onmouseup(function() {
        var i, j, row;
        if (buildBar.draggingUnit) {
          if (control.mouse[0] < 100 || control.mouse[0] > window.innerWidth - 100) {
            buildBar.draggingUnit = null;
            playSound("sounds/ui/shake.wav");
          } else {
            commander.fleet[buildBar.draggingUnit.key] = buildBar.draggingUnit.spec;
            buildBar.draggingUnit = null;
            playSound("sounds/ui/flick.wav");
          }
        }
        if (buildBar.draggingFleet) {
          if (control.mouse[1] < 64) {
            row = buildBar.draggingFleet.row;
            for (i = j = 0; j < 10; i = ++j) {
              commander.fleet[row + "," + i] = "";
            }
            delete commander.fleet.ais[row];
          }
        }
        if (buildBar.draggingFleet != null) {
          playSound("sounds/ui/flick.wav");
          buildBar.draggingFleet = null;
        }
        return fleetMode.tick();
      });
      div(function() {
        margin(20);
        text_align("center");
        color("white");
        return text("Drag and drop ships designs or select row for your build bar.");
      });
      if (account.hasDLCBonus()) {
        div(function() {
          margin(20);
          return input({
            type: "text",
            placeholder: "search for ships"
          }, function() {
            padding(10);
            font_size(16);
            width(300);
            background_color("rgba(0,0,0,.4)");
            color("white");
            border("none");
            return oninput(function(e) {
              return fleetMode.search = e.target.value;
            });
          });
        });
      }
      return div("#fleet", function() {
        var c, j, k, nrows, r, ref, ref1, ref2, results, row, v;
        nrows = 6;
        ref = commander.fleet;
        for (k in ref) {
          v = ref[k];
          if (v) {
            ref1 = k.split(","), r = ref1[0], c = ref1[1];
            r = parseInt(r);
            if (r + 4 > nrows) {
              nrows = r + 4;
            }
          }
        }
        if (!commander.fleet.selection) {
          commander.fleet.selection = 0;
        }
        results = [];
        for (row = j = 0, ref2 = nrows; 0 <= ref2 ? j < ref2 : j > ref2; row = 0 <= ref2 ? ++j : --j) {
          results.push((function(row) {
            return div(function() {
              width("100%");
              margin(0);
              padding(0);
              border("none");
              onmousemove(function(e) {
                if (e.buttons === 1) {
                  return buildBar.fleetDragover = row;
                } else if (e.buttons === 0) {
                  if (buildBar.draggingUnit) {
                    commander.fleet[buildBar.draggingUnit.key] = buildBar.draggingUnit.spec;
                    buildBar.draggingUnit = null;
                  }
                  return buildBar.draggingFleet = null;
                }
              });
              onmouseout(function(e) {
                return buildBar.fleetDragover = -1;
              });
              onmouseup(function(e) {
                if (e.which === 1) {
                  if ((buildBar.draggingFleet != null) && buildBar.draggingFleet.row !== row) {
                    insertFleet(buildBar.draggingFleet.row, row);
                    buildBar.draggingFleet = null;
                    return playSound("sounds/ui/flick.wav");
                  }
                }
              });
              return div(function() {
                var col, fleetAis, l;
                position("relative");
                height(84);
                width(840);
                margin("0px auto");
                if (buildBar.fleetDragover === row && buildBar.draggingFleet) {
                  if (buildBar.draggingFleet.row > row) {
                    box_shadow("0 -5px 0 rgba(155,255,155,.4)");
                  }
                  if (buildBar.draggingFleet.row < row) {
                    box_shadow("0 5px 0 rgba(155,255,155,.4)");
                  }
                }
                if (commander.fleet.selection === row) {
                  background_color("rgba(255,255,255,.2)");
                }
                fleetAis = commander.fleet.ais || {};
                for (col = l = 0; l < 10; col = ++l) {
                  unitButton(row + "," + col);
                }
                img(".hover-fade", {
                  src: "img/ui/back.png",
                  width: 40,
                  height: 50
                }, function() {
                  position("absolute");
                  top(15);
                  right(-42);
                  onmousedown(function(e) {
                    var i, m;
                    if (e.altKey) {
                      for (i = m = 0; m < 10; i = ++m) {
                        commander.fleet[row + "," + i] = "";
                      }
                      delete commander.fleet.ais[row];
                      control.savePlayer();
                    } else {
                      commander.fleet.selection = row;
                      buildBar.fleetToDrag = row;
                      account.save();
                    }
                    return e.preventDefault();
                  });
                  return onmousemove(function(e) {
                    if (e.buttons === 1 && !buildBar.draggingFleet && buildBar.fleetToDrag === row) {
                      buildBar.fleetToDrag = -1;
                      return buildBar.draggingFleet = {
                        row: row,
                        name: fleetAis[row]
                      };
                    }
                  });
                });
                return input(".hover-black", {
                  type: "text",
                  value: fleetAis[row] || "",
                  maxlength: 15,
                  placeholder: "●"
                }, function() {
                  position("absolute");
                  padding(10);
                  top(20);
                  left(-84);
                  width(84);
                  color("white");
                  border("none");
                  font_size(12);
                  text_align("right");
                  return oninput(function(e) {
                    if (!commander.fleet.ais) {
                      commander.fleet.ais = {};
                    }
                    fleetAis = commander.fleet.ais;
                    e.target.value = e.target.value.replace(/[^A-Za-z0-9]/g, "");
                    fleetAis[row] = e.target.value;
                    return account.rootSave();
                  });
                });
              });
            });
          })(row));
        }
        return results;
      });
    });
    div("#unit-dragger", function() {
      position("absolute");
      width(84);
      height(84);
      pointer_events("none");
      if (buildBar.draggingUnit) {
        left("-100px");
        top("-100px");
        return buildBar.specToThumbBg(buildBar.draggingUnit.spec);
      }
    });
    div("#fleet-dragger", function() {
      var i, j, key;
      if (buildBar.draggingFleet) {
        position("absolute");
        left(-6);
        right(0);
        top(control.mouse[1] - 84 / 2 + "px");
        margin("0 auto");
        padding(0);
        width(840);
        height(84);
        visibility("visible");
        pointer_events("none");
        div(function() {
          var ref;
          text(((ref = buildBar.draggingFleet) != null ? ref.name : void 0) || "●");
          position("absolute");
          padding(10);
          top(20);
          left(-84);
          width(84);
          color("white");
          border("none");
          font_size(12);
          return text_align("right");
        });
        for (i = j = 0; j < 10; i = ++j) {
          key = buildBar.draggingFleet.row + ',' + i;
          div(function() {
            position("absolute");
            width(84);
            height(84);
            top(0);
            left(i * 84);
            background_color("rgba(0,0,0,.4)");
            return buildBar.specToThumbBg(commander.fleet[key]);
          });
        }
        return img(".hover-fade", {
          src: "img/ui/back.png",
          width: 40,
          height: 50
        }, function() {
          position("absolute");
          top(15);
          return right(-42);
        });
      } else {
        return visibility("hidden");
      }
    });
    if (designMode.locked) {
      return lockScreen();
    }
  };

  lockScreen = function() {
    return div(function() {
      position("absolute");
      top(0);
      left(0);
      right(0);
      bottom(0);
      background_color("rgba(0,0,0,.8)");
      z_index("1");
      return div(function() {
        position("absolute");
        top(200);
        right(0);
        left(0);
        height(100);
        line_height(100);
        background_color("rgba(200,0,0,.6)");
        color("white");
        text_align("center");
        return text("You can't switch fleets in 1v1 tournament mode");
      });
    });
  };

  unitButton = function(key) {
    var spec;
    spec = commander.fleet[key];
    return div(".unitpic", function() {
      var found, name, unit;
      border("1px solid rgba(255,255,255,.05)");
      display("inline-block");
      position("relative");
      unit = buildBar.specToUnit(spec);
      buildBar.specToThumbBg(spec);
      if (buildBar.unitDragover === key && buildBar.draggingUnit) {
        if (!spec) {
          background_color("rgba(255,255,255,.4)");
        } else {
          background_color("rgba(155,255,155,.4)");
        }
      }
      if (fleetMode.search) {
        if (spec && spec[0] === "{") {
          name = JSON.parse(spec).name;
          if (name && name.indexOf(fleetMode.search) !== -1) {
            found = true;
          }
        }
        if (!found) {
          opacity(".1");
        }
      }
      onmousedown(function(e) {
        if (e.which === 1) {
          if (e.altKey) {
            commander.fleet[key] = "";
            return;
          }
          if (spec) {
            buildBar.draggingUnit = {
              spec: spec,
              key: key
            };
            if (!e.shiftKey) {
              commander.fleet[key] = "";
            }
          }
        }
        return e.preventDefault();
      });
      onmousemove(function(e) {
        if (e.which === 1) {
          if (buildBar.unitDragover !== key) {
            buildBar.unitDragover = key;
            if (buildBar.draggingUnit) {
              return;
            }
          }
        }
        return onecup.no_refresh();
      });
      return onmouseup(function(e) {
        var atSpec;
        if (e.which === 1) {
          if (buildBar.draggingUnit) {
            atSpec = commander.fleet[key];
            if (!isEmptySpec(atSpec)) {
              commander.fleet[buildBar.draggingUnit.key] = atSpec;
            }
            commander.fleet[key] = buildBar.draggingUnit.spec;
            control.savePlayer();
            buildBar.draggingUnit = null;
            return playSound("sounds/ui/flick.wav");
          }
        }
      });
    });
  };

  ui.unitPix = function() {
    return div(function() {
      var j, results, row;
      position("absolute");
      top(0);
      left(0);
      right(0);
      bottom(0);
      background("rgba(0,0,0,.9)");
      text("unit pix");
      results = [];
      for (row = j = 1; j < 25; row = ++j) {
        results.push(div(function() {
          var col, key, l, results1, spec, unit;
          height(84);
          min_width(840);
          results1 = [];
          for (col = l = 0; l < 10; col = ++l) {
            key = row + "," + col;
            spec = commander.fleet[key];
            unit = buildBar.specToUnit(spec);
            if (unit) {
              unit.color = commander.color;
              results1.push(img({
                src: unit.thumb(),
                width: 64,
                height: 64
              }));
            } else {
              results1.push(void 0);
            }
          }
          return results1;
        }));
      }
      return results;
    });
  };

}).call(this);
;


